// Code generated by avro/gen. DO NOT EDIT.
package schemas

import (
	"github.com/hamba/avro/v2"
)

// Character is a generated struct.
type Character struct {
	ID          string `avro:"id" json:"id"`
	Name        string `avro:"name" json:"name"`
	Description string `avro:"description" json:"description"`
}

var schemaCharacter = avro.MustParse(`{"name":"character","type":"record","fields":[{"name":"id","type":"string"},{"name":"name","type":"string"},{"name":"description","type":"string"}]}`)

// Schema returns the schema for Character.
func (o *Character) Schema() avro.Schema {
	return schemaCharacter
}

// Unmarshal decodes b into the receiver.
func (o *Character) Unmarshal(b []byte) error {
	return avro.Unmarshal(o.Schema(), b, o)
}

// Marshal encodes the receiver.
func (o *Character) Marshal() ([]byte, error) {
	return avro.Marshal(o.Schema(), o)
}

// Scene is a generated struct.
type Scene struct {
	ID          string   `avro:"id" json:"id"`
	Name        string   `avro:"name" json:"name"`
	Description string   `avro:"description" json:"description"`
	Characters  []string `avro:"characters" json:"characters"`
}

var schemaScene = avro.MustParse(`{"name":"scene","type":"record","fields":[{"name":"id","type":"string"},{"name":"name","type":"string"},{"name":"description","type":"string"},{"name":"characters","type":{"type":"array","items":"string"}}]}`)

// Schema returns the schema for Scene.
func (o *Scene) Schema() avro.Schema {
	return schemaScene
}

// Unmarshal decodes b into the receiver.
func (o *Scene) Unmarshal(b []byte) error {
	return avro.Unmarshal(o.Schema(), b, o)
}

// Marshal encodes the receiver.
func (o *Scene) Marshal() ([]byte, error) {
	return avro.Marshal(o.Schema(), o)
}

// ScenarioV1 is a generated struct.
type ScenarioV1 struct {
	Scenario   string      `avro:"scenario" json:"scenario"`
	Characters []Character `avro:"characters" json:"characters"`
	Scenes     []Scene     `avro:"scenes" json:"scenes"`
}

var schemaScenarioV1 = avro.MustParse(`{"name":"ScenarioV1","type":"record","fields":[{"name":"scenario","type":"string"},{"name":"characters","type":{"type":"array","items":{"name":"character","type":"record","fields":[{"name":"id","type":"string"},{"name":"name","type":"string"},{"name":"description","type":"string"}]}}},{"name":"scenes","type":{"type":"array","items":{"name":"scene","type":"record","fields":[{"name":"id","type":"string"},{"name":"name","type":"string"},{"name":"description","type":"string"},{"name":"characters","type":{"type":"array","items":"string"}}]}}}]}`)

// Schema returns the schema for ScenarioV1.
func (o *ScenarioV1) Schema() avro.Schema {
	return schemaScenarioV1
}

// Unmarshal decodes b into the receiver.
func (o *ScenarioV1) Unmarshal(b []byte) error {
	return avro.Unmarshal(o.Schema(), b, o)
}

// Marshal encodes the receiver.
func (o *ScenarioV1) Marshal() ([]byte, error) {
	return avro.Marshal(o.Schema(), o)
}
